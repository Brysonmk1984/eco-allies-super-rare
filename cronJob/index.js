const Web3 = require("web3");
const contractJson = process.env.development ? require("../build/contracts/AllyCore.json") : {"contractName":"AllyCore","abi":[{"constant":false,"inputs":[{"name":"_dna","type":"bytes32"}],"name":"addToAllyArray","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x06da7d84"},{"constant":true,"inputs":[],"name":"getAllAllies","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x3820eb46"}],"bytecode":"0x608060405234801561001057600080fd5b5061025b806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306da7d84146100515780633820eb46146100d7575b600080fd5b34801561005d57600080fd5b506100806004803603810190808035600019169060200190929190505050610143565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100c35780820151818401526020810190506100a8565b505050509050019250505060405180910390f35b3480156100e357600080fd5b506100ec6101d3565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561012f578082015181840152602081019050610114565b505050509050019250505060405180910390f35b6060600082908060018154018082558091505090600182039060005260206000200160009091929091909150906000191690555060008054806020026020016040519081016040528092919081815260200182805480156101c757602002820191906000526020600020905b815460001916815260200190600101908083116101af575b50505050509050919050565b6060600080548060200260200160405190810160405280929190818152602001828054801561022557602002820191906000526020600020905b8154600019168152602001906001019080831161020d575b50505050509050905600a165627a7a72305820bfa0e521f115550e7817eb39b347bb07907f5f0c02488704700f40aa59b988430029","deployedBytecode":"0x60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306da7d84146100515780633820eb46146100d7575b600080fd5b34801561005d57600080fd5b506100806004803603810190808035600019169060200190929190505050610143565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100c35780820151818401526020810190506100a8565b505050509050019250505060405180910390f35b3480156100e357600080fd5b506100ec6101d3565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561012f578082015181840152602081019050610114565b505050509050019250505060405180910390f35b6060600082908060018154018082558091505090600182039060005260206000200160009091929091909150906000191690555060008054806020026020016040519081016040528092919081815260200182805480156101c757602002820191906000526020600020905b815460001916815260200190600101908083116101af575b50505050509050919050565b6060600080548060200260200160405190810160405280929190818152602001828054801561022557602002820191906000526020600020905b8154600019168152602001906001019080831161020d575b50505050509050905600a165627a7a72305820bfa0e521f115550e7817eb39b347bb07907f5f0c02488704700f40aa59b988430029","sourceMap":"25:266:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:266:0;;;;;;;","deployedSourceMap":"25:266:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;74:121;;8:9:-1;5:2;;;30:1;27;20:12;5:2;74:121:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;74:121:0;;;;;;;;;;;;;;;;;199:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;199:89:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;199:89:0;;;;;;;;;;;;;;;;;74:121;128:9;146;161:4;146:20;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;146:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;181:9;174:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;74:121;;;:::o;199:89::-;244:9;274;267:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;199:89;:::o","source":"pragma solidity 0.4.25;\n\ncontract AllyCore {\n  bytes32[]  allyArray;\n\n\n\n  function addToAllyArray(bytes32 _dna) public returns (bytes32[]){\n      allyArray.push(_dna);\n      return allyArray;\n  }\n\n  function getAllAllies() public view returns (bytes32[] memory){\n    return allyArray;\n  }\n\n}","sourcePath":"/Users/brysonkruk/Documents/projects/ea-sr/contracts/AllyCore.sol","ast":{"absolutePath":"/Users/brysonkruk/Documents/projects/ea-sr/contracts/AllyCore.sol","exportedSymbols":{"AllyCore":[31]},"id":32,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.4",".25"],"nodeType":"PragmaDirective","src":"0:23:0"},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":31,"linearizedBaseContracts":[31],"name":"AllyCore","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4,"name":"allyArray","nodeType":"VariableDeclaration","scope":31,"src":"47:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3,"length":null,"nodeType":"ArrayTypeName","src":"47:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"body":{"id":20,"nodeType":"Block","src":"138:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":15,"name":"_dna","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"161:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":12,"name":"allyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"146:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":14,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"146:14:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) returns (uint256)"}},"id":16,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"146:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17,"nodeType":"ExpressionStatement","src":"146:20:0"},{"expression":{"argumentTypes":null,"id":18,"name":"allyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"181:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":11,"id":19,"nodeType":"Return","src":"174:16:0"}]},"documentation":null,"id":21,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"addToAllyArray","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"name":"_dna","nodeType":"VariableDeclaration","scope":21,"src":"98:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5,"name":"bytes32","nodeType":"ElementaryTypeName","src":"98:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"97:14:0"},"payable":false,"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"name":"","nodeType":"VariableDeclaration","scope":21,"src":"128:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8,"name":"bytes32","nodeType":"ElementaryTypeName","src":"128:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9,"length":null,"nodeType":"ArrayTypeName","src":"128:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"127:11:0"},"scope":31,"src":"74:121:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":29,"nodeType":"Block","src":"261:27:0","statements":[{"expression":{"argumentTypes":null,"id":27,"name":"allyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"274:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":26,"id":28,"nodeType":"Return","src":"267:16:0"}]},"documentation":null,"id":30,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getAllAllies","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"220:2:0"},"payable":false,"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"name":"","nodeType":"VariableDeclaration","scope":30,"src":"244:9:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"244:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":24,"length":null,"nodeType":"ArrayTypeName","src":"244:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"243:18:0"},"scope":31,"src":"199:89:0","stateMutability":"view","superFunction":null,"visibility":"public"}],"scope":32,"src":"25:266:0"}],"src":"0:291:0"},"legacyAST":{"absolutePath":"/Users/brysonkruk/Documents/projects/ea-sr/contracts/AllyCore.sol","exportedSymbols":{"AllyCore":[31]},"id":32,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.4",".25"],"nodeType":"PragmaDirective","src":"0:23:0"},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":31,"linearizedBaseContracts":[31],"name":"AllyCore","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4,"name":"allyArray","nodeType":"VariableDeclaration","scope":31,"src":"47:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3,"length":null,"nodeType":"ArrayTypeName","src":"47:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"body":{"id":20,"nodeType":"Block","src":"138:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":15,"name":"_dna","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"161:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":12,"name":"allyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"146:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":14,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"146:14:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) returns (uint256)"}},"id":16,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"146:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17,"nodeType":"ExpressionStatement","src":"146:20:0"},{"expression":{"argumentTypes":null,"id":18,"name":"allyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"181:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":11,"id":19,"nodeType":"Return","src":"174:16:0"}]},"documentation":null,"id":21,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"addToAllyArray","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"name":"_dna","nodeType":"VariableDeclaration","scope":21,"src":"98:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5,"name":"bytes32","nodeType":"ElementaryTypeName","src":"98:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"97:14:0"},"payable":false,"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"name":"","nodeType":"VariableDeclaration","scope":21,"src":"128:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8,"name":"bytes32","nodeType":"ElementaryTypeName","src":"128:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9,"length":null,"nodeType":"ArrayTypeName","src":"128:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"127:11:0"},"scope":31,"src":"74:121:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":29,"nodeType":"Block","src":"261:27:0","statements":[{"expression":{"argumentTypes":null,"id":27,"name":"allyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"274:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":26,"id":28,"nodeType":"Return","src":"267:16:0"}]},"documentation":null,"id":30,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getAllAllies","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"220:2:0"},"payable":false,"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"name":"","nodeType":"VariableDeclaration","scope":30,"src":"244:9:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"244:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":24,"length":null,"nodeType":"ArrayTypeName","src":"244:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"243:18:0"},"scope":31,"src":"199:89:0","stateMutability":"view","superFunction":null,"visibility":"public"}],"scope":32,"src":"25:266:0"}],"src":"0:291:0"},"compiler":{"name":"solc","version":"0.4.25+commit.59dbf8f1.Emscripten.clang"},"networks":{"4":{"events":{},"links":{},"address":"0x1a12858b0D098054cfe43B8dE74Fc2b6f0Bfed89","transactionHash":"0xd96e4a4085c723f099b0d9509c2d0ef39f9eba4dbf6995f6756214dd322e7020"},"5777":{"events":{},"links":{},"address":"0xa915A2f8dA312eCC7A729A99F247fe5ff2Dee6c9","transactionHash":"0x2591abe4de8be8455813489e4a62b465c18a115cb5f1a824b99568b128fedfb8"}},"schemaVersion":"3.0.2","updatedAt":"2019-04-01T17:50:31.575Z","devdoc":{"methods":{}},"userdoc":{"methods":{}}};
const seedRandom = require("seedrandom");
const HDWalletProvider = require('truffle-hdwallet-provider');

require('dotenv').config();
const mnemonic = process.env.MNEMONIC;

var provider = process.env.NODE_ENV === 'development' ? new Web3.providers.HttpProvider("http://127.0.0.1:8545") :  new HDWalletProvider(mnemonic, `https://rinkeby.infura.io/v3/${process.env.INFURAAPIKEY}`);
var web3 = new Web3(provider);
const payingAccount =  process.env.NODE_ENV === 'development' ? '0x895B758229aFF6C0f95146A676bBF579aD7636aa' : process.env.PAYER;

// get contract instance
web3.eth.net.getId().then((id)=>{
  
  const deployedNetwork = contractJson.networks[id];
  const contract = new web3.eth.Contract(
    contractJson.abi,
    deployedNetwork.address,
  );

  // Generate random string to represent the new ally
  let rng = new seedRandom();
  const num = Math.floor(rng()*10000000000000000);
  let strNum = num.toString();
  if(strNum.length === 15){
    strNum = '0'+ strNum;
  }else if(strNum.length === 14){
    strNum = '00'+ strNum;
  }

  // Call smart contract add method to put the new ally on the blockchain
  contract.methods.addToAllyArray(web3.utils.fromAscii(strNum)).send({from: payingAccount, gasPrice : '4700000'})
  .on('transactionHash', (hash) => {
    console.log('HASH - ', hash);
  })
  .on('confirmation', (confirmationNumber, receipt) => {
    console.log('CONFIRM - ', confirmationNumber);
  })
  .on('receipt', (receipt) => {
      // receipt example
      console.log('RECEIPT - ',receipt);
  })
  .on('error', console.error); // If there's an out of gas error the second parameter is the receipt.
  });
